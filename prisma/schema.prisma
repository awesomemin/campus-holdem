// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int           @id @default(autoincrement())
  email             String        @unique
  password          String
  name              String
  nickname          String        @unique
  phoneNumber       String        @unique
  profilePictureUrl String?
  ppi               Int           @default(1000)
  ticketBalance     Int           @default(0)
  created_at        DateTime      @default(now())
  updated_at        DateTime      @default(now())
  games             Participant[]
}

model Game {
  id                         Int           @id @default(autoincrement())
  time                       DateTime
  place                      String
  particifationFee           Int
  rebuyinFee                 Int
  startingChip               Int
  startingBB                 Int
  estimatedDurationInMinutes Int
  maxParticipant             Int
  minParticipant             Int
  status                     GameStatus    @default(PLANNED)
  participants               Participant[]
}

model Participant {
  game         Game              @relation(fields: [gameId], references: [id])
  gameId       Int
  User         User              @relation(fields: [userId], references: [id])
  userId       Int
  status       ParticipantStatus @default(SUSPENDED)
  rank         Int?
  ppiChange    Int?
  ticketChange Int?
  usedTicket   Boolean           @default(false)
  createdAt    DateTime          @default(now())
  rebuyin      Boolean?

  @@id([gameId, userId])
}

enum ParticipantStatus {
  CONFIRMED
  SUSPENDED
}

enum GameStatus {
  PLANNED
  PROGRESS
  COMPLETED
  CANCELED
}
